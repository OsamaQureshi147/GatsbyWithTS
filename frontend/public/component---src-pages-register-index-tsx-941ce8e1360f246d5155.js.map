{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/register/index.tsx"],"names":["initialState","username","email","password","confirm_password","useMutation","CREATE_USER","onError","networkError","graphQLErrors","console","log","message","map","onCompleted","signupUser","localStorage","setItem","token","navigate","replace","setUserInfo","addUser","loading","useState","userInfo","onChangeHandler","e","target","name","value","className","onSubmit","preventDefault","variables","id","type","placeholder","required","onChange","style","color","Link","to"],"mappings":"mNA8HA,UAnHoD,WAClD,IAiBa,EAjBPA,EAAe,CACnBC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,iBAAkB,IAEpB,GAA+BC,iBAAYC,KAAa,CACtDC,QAAS,YAAqC,IAAlCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACpBD,GACFE,QAAQC,IAAI,gBAAiBH,EAAaI,SAExCH,GACFA,EAAcI,KAAI,YAAiB,IAAdD,EAAc,EAAdA,QACnBF,QAAQC,IAAIC,OAIlBE,aAAW,oBAAE,qFAASC,EAAT,EAASA,WACpBC,aAAaC,QAAQ,QAASF,EAAWG,QACzCC,cAAS,IAAK,CACZC,SAAS,IAEXC,EAAYrB,GALD,2CAAF,+CAXNsB,EAAP,KAmBA,GAnBA,KAAkBC,SAmBcC,cAASxB,IAAlCyB,EAAP,KAAiBJ,EAAjB,KACQpB,EAAgDwB,EAAhDxB,SAAUC,EAAsCuB,EAAtCvB,MAAOC,EAA+BsB,EAA/BtB,SAAUC,EAAqBqB,EAArBrB,iBAe7BsB,EAA8D,SAAAC,GAAK,MACvEN,EAAY,OAAD,UAAMI,IAAN,MAAiBE,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,MAA1C,MAIb,OACE,uBAAKC,UAAU,aACb,uBAAKA,UAAU,qBACf,uBAAKA,UAAW,mBACd,uBAAKA,UAAU,kBACb,wBAAMA,UAAU,OAAOC,SAxB+B,SAAAL,GAC5D,IAAQ1B,EAAgDwB,EAAhDxB,SAAUC,EAAsCuB,EAAtCvB,MAAOC,EAA+BsB,EAA/BtB,SACrBA,IADoDsB,EAArBrB,mBAInCuB,EAAEM,iBACFX,EAAQ,CACNY,UAAW,CACTjC,WACAC,QACAC,iBAeI,sBAAIgC,GAAG,SAAP,YACA,yBAAOJ,UAAU,SAAjB,YACA,yBACEF,KAAK,WACLE,UAAU,QACVK,KAAK,OACLC,YAAY,iBACZC,UAAQ,EACRR,MAAO7B,EACPsC,SAAUb,IAGZ,yBAAOK,UAAU,SAAjB,kBACA,yBACEF,KAAK,QACLE,UAAU,QACVK,KAAK,QACLC,YAAY,cACZC,UAAQ,EACRR,MAAO5B,EACPqC,SAAUb,IAGZ,yBAAOK,UAAU,SAAjB,aACA,yBACEF,KAAK,WACLE,UAAU,QACVK,KAAK,WACLC,YAAY,iBACZP,MAAO3B,EACPoC,SAAUb,EACVY,UAAQ,IAGV,yBAAOP,UAAU,SAAjB,qBACA,yBACEF,KAAK,mBACLE,UAAU,QACVK,KAAK,WACLC,YAAY,iBACZP,MAAO1B,EACPmC,SAAUb,EACVY,UAAQ,IAGV,0BAAQP,UAAU,iBAAlB,UACA,yBAAOA,UAAU,mBAAjB,2BAC2B,IACzB,qBACES,MAAO,CAAEC,MAAO,SAGhB,gBAAC,EAAAC,KAAD,CAAMC,GAAG,YAAT","file":"component---src-pages-register-index-tsx-941ce8e1360f246d5155.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useMutation } from \"@apollo/client\"\nimport { Link, navigate } from \"gatsby\"\n\n// import { useHistory } from \"react-router-dom\";\n\nimport \"../login/LoginPage.css\"\nimport { CREATE_USER } from \"../../Queries/gqlMutations\"\nimport { RouteComponentProps } from \"../../Types/RouteComponentProps\"\n\n\nconst RegisterPage: React.FC<RouteComponentProps> = () => {\n  const initialState = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  }\n  const [addUser, { loading }] = useMutation(CREATE_USER, {\n    onError: ({ networkError, graphQLErrors }) => {\n      if (networkError) {\n        console.log(\"NetworkError:\", networkError.message)\n      }\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message }) => {\n          console.log(message)\n        })\n      }\n    },\n    onCompleted: async ({ signupUser }) => {\n      localStorage.setItem(\"token\", signupUser.token)\n      navigate(\"/\", {\n        replace: true,\n      })\n      setUserInfo(initialState)\n    },\n  })\n  const [userInfo, setUserInfo] = useState(initialState)\n  const { username, email, password, confirm_password } = userInfo\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = e => {\n    const { username, email, password, confirm_password } = userInfo\n    if (password !== confirm_password) {\n      return\n    }\n    e.preventDefault()\n    addUser({\n      variables: {\n        username,\n        email,\n        password,\n      },\n    })\n  }\n  const onChangeHandler: React.ChangeEventHandler<HTMLInputElement> = e => {\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value })\n  }\n  // const history = useHistory()\n\n  return (\n    <div className=\"container\">\n      <div className=\"background-image\" />\n      <div className={\"login-container\"}>\n        <div className=\"card-container\">\n          <form className=\"form\" onSubmit={handleSubmit}>\n            <h3 id=\"title\">Register</h3>\n            <label className=\"label\">Username</label>\n            <input\n              name=\"username\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Enter Username\"\n              required\n              value={username}\n              onChange={onChangeHandler}\n            />\n\n            <label className=\"label\">Email Address*</label>\n            <input\n              name=\"email\"\n              className=\"input\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              required\n              value={email}\n              onChange={onChangeHandler}\n            />\n\n            <label className=\"label\">Password*</label>\n            <input\n              name=\"password\"\n              className=\"input\"\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={onChangeHandler}\n              required\n            />\n\n            <label className=\"label\">Confirm Password*</label>\n            <input\n              name=\"confirm_password\"\n              className=\"input\"\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={confirm_password}\n              onChange={onChangeHandler}\n              required\n            />\n\n            <button className=\"submit-button\">Submit</button>\n            <label className=\"forgot-password\">\n              Already have an account?{\" \"}\n              <b\n                style={{ color: \"gold\" }}\n                // onClick={() => history.push(\"login\")}\n              >\n                <Link to=\"../login\">Sign In</Link>\n              </b>\n            </label>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterPage"],"sourceRoot":""}